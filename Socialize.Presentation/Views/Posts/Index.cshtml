@using AutoMapper
@using Microsoft.AspNetCore.Identity
@using Socialize.Core.Application.Dtos
@using Socialize.Core.Application.UseCases.ReadPosts
@using Socialize.Core.Domain.Enums
@using Socialize.Infrastructure.Identity.Models
@using Socialize.Presentation.Enums
@using Socialize.Presentation.Models.Posts
@model MainViewModel
@inject IMapper _mapper
@inject UserManager<ApplicationUser> _userManager
@inject IReadPostsUseCase _readPostsUseCase
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";
    var articleClass = "bg-white border rounded max-w-md w-full sm:w-3/4 md:w-2/3 lg:w-1/2";
    ApplicationUser currentUser = await _userManager.GetUserAsync(User);
    Guid currentUserId = Guid.Parse(currentUser.Id);
    PostsPageDto postsPageDto = await _readPostsUseCase.GetPosts(currentUserId, Model.IsNextPage, Model.CurrentPageId, new CancellationToken());
    PostPageViewModel postPageViewModel = _mapper.Map<PostPageViewModel>(postsPageDto);
}
<section class="flex gap-x-3">
    <div class="max-w-md w-full bg-white p-8 rounded-lg shadow-md">
        <form id="postForm" asp-controller="Posts" asp-action="Create" enctype="multipart/form-data">

            <!-- Post Content Section -->
            <div class="mb-6">
                <label asp-for="Content" class="block text-gray-700 text-sm font-bold mb-2">Post Content:</label>
                <textarea asp-for="Content" id="postContent" rows="4" class="w-full border-2 rounded-md px-4 py-2 leading-5 transition duration-150 ease-in-out sm:text-sm sm:leading-5 resize-none focus:outline-none focus:border-blue-500" placeholder="What's on your mind?"></textarea>
                <span asp-validation-for="Content" class="text-red-500"></span>
            </div>
            <!-- Option Select Section -->
            <div class="mb-6">
                <label  asp-for="Mode" class="block text-gray-700 text-sm font-bold mb-2">Select Post Type:</label>
                <select asp-for="Mode" id="postType" class="w-full border-2 rounded-md px-4 py-2 leading-5 transition duration-150 ease-in-out sm:text-sm sm:leading-5 focus:outline-none focus:border-blue-500">
                    @if ( Model is not null && Model.Mode is CreatePostModes.Image)
                    {
                        <option value="@CreatePostModes.Text">Text Only</option>
                        <option value="@CreatePostModes.Image" selected>Attach Image</option>
                        <option value="@CreatePostModes.Video">Attach Video</option>
                    }
                    else if (Model is not null && Model.Mode is CreatePostModes.Video)
                    {
                        <option value="@CreatePostModes.Text">Text Only</option>
                        <option value="@CreatePostModes.Image">Attach Image</option>
                        <option value="@CreatePostModes.Video" selected>Attach Video</option>
                    }
                    else{
                        <option value="@CreatePostModes.Text">Text Only</option>
                        <option value="@CreatePostModes.Image">Attach Image</option>
                        <option value="@CreatePostModes.Video">Attach Video</option>
                    }

                </select>
            </div>
            <!-- Dynamic Components Section -->
            <div id="imageComponent" class="hidden mb-6">
                <label asp-for="Image" class="block text-gray-700 text-sm font-bold mb-2">Attach Image:</label>
                <div class="relative border-2 rounded-md px-4 py-3 bg-white flex items-center justify-between hover:border-blue-500 transition duration-150 ease-in-out">
                    <input type="file" asp-for="Image" id="fileAttachment" accept="image/*" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer">
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        <span class="ml-2 text-sm text-gray-600">Choose a file</span>
                    </div>
                    <span class="text-sm text-gray-500">Max file size: 5MB</span>
                </div>
                <img id="imagePreview" class="mt-4 w-full hidden rounded-md" />
                <span asp-validation-for="Image" class="text-red-500"></span>
            </div>
            <div id="videoComponent" class="hidden mb-6">
                <label asp-for="VideoUrl" for="videoUrl" class="block text-gray-700 text-sm font-bold mb-2">YouTube Video URL:</label>
                <input asp-for="VideoUrl" type="url" id="videoUrl" name="videoUrl" class="w-full border-2 rounded-md px-4 py-2 leading-5 transition duration-150 ease-in-out sm:text-sm sm:leading-5 focus:outline-none focus:border-blue-500" placeholder="Enter YouTube URL">
                <span asp-validation-for="VideoUrl" class="text-red-500"></span>
            </div>
            <!-- Submit Button and Character Limit Section -->
            <div class="flex items-center justify-between">
                <button type="submit" class="flex justify-center items-center bg-red-500 hover:bg-red-600 focus:outline-none focus:shadow-outline-blue text-white py-2 px-4 rounded-md transition duration-300 gap-2">
                    Post <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" viewBox="0 0 24 24" id="send" fill="#fff">
                        <path fill="none" d="M0 0h24v24H0V0z"></path>
                        <path d="M3.4 20.4l17.45-7.48c.81-.35.81-1.49 0-1.84L3.4 3.6c-.66-.29-1.39.2-1.39.91L2 9.12c0 .5.37.93.87.99L17 12 2.87 13.88c-.5.07-.87.5-.87 1l.01 4.61c0 .71.73 1.2 1.39.91z"></path>
                    </svg>
                </button>
                <span class="text-gray-500 text-sm">Max 280 characters</span>
            </div>
        </form>
    </div>
    <div class="flex-grow overflow-y-auto">
        <section class="bg-gray-100 flex flex-col gap-8 items-center justify-center py-8 px-4">
            @foreach (PostViewModel postViewModel in postPageViewModel.Posts)
            {
                if (postViewModel.Type == AttachmentTypes.Image)
                { 
                    <article class="@articleClass">
                        <div class="flex justify-between items-center p-2">
                            <div class="flex items-center px-4 py-3 gap-x-1">
                                <img class="h-8 w-8 rounded-full" src="@postViewModel.UsernamePhoto" />
                                <div class="ml-3">
                                    <span class="text-sm font-semibold antialiased block leading-tight">@postViewModel.Username</span>
                                </div>
                            </div>
                            <div class="text-gray-400 text-xs">
                                @postViewModel.CreatedAtFormatted
                            </div>
                        </div>
                        <img src="@postViewModel.AttachmentUrl" alt="Post picture" />
                        <div class="p-2">
                            @postViewModel.Content
                        </div>
                        <div class="flex items-center justify-between mx-4 mt-3 mb-2 p-2">
                            <a href="# " class="flex items-center justify-center text-red-500">
                                <i class="fa-solid fa-comment fa-lg"></i>
                            </a>
                            <a href="#" class="flex items-center justify-center text-red-500 font-semibold">
                                @postViewModel.CommentsCount Comments
                            </a>
                        </div>
                    </article>
                }
                else if (postViewModel.Type == AttachmentTypes.Video)
                {
                    <article class="@articleClass">
                        <div class="flex justify-between items-center p-2">
                            <div class="flex items-center px-4 py-3 gap-x-1">
                                <img class="h-8 w-8 rounded-full" src="@postViewModel.UsernamePhoto" />
                                <div class="ml-3">
                                    <span class="text-sm font-semibold antialiased block leading-tight">@postViewModel.Username</span>
                                </div>
                            </div>
                            <div class="text-gray-400 text-xs">
                                @postViewModel.CreatedAtFormatted
                            </div>
                        </div>
                        <div class="relative w-full pb-56.25 mb-5">
                            <iframe height="200"
                                    class="relative w-full"
                                    src="@postViewModel.AttachmentUrl"
                                    frameborder="0"
                                    allowfullscreen></iframe>
                        </div>
                        <div class="p-2">
                            @postViewModel.Content
                        </div>
                        <div class="flex items-center justify-between mx-4 mt-3 mb-2 p-2">
                            <a href="# " class="flex items-center justify-center text-red-500">
                                <i class="fa-solid fa-comment fa-lg"></i>
                            </a>
                            <a href="#" class="flex items-center justify-center text-red-500 font-semibold">
                                @postViewModel.CommentsCount Comments
                            </a>
                        </div>
                    </article>
                }
                else
                {
                    <article class="@articleClass">
                        <div class="flex justify-between items-center p-2">
                            <div class="flex items-center px-4 py-3 gap-x-1">
                                <img class="h-8 w-8 rounded-full" src="@postViewModel.UsernamePhoto" />
                                <div class="ml-3">
                                    <span class="text-sm font-semibold antialiased block leading-tight">@postViewModel.Username</span>
                                </div>
                            </div>
                            <div class="text-gray-400 text-xs">
                                @postViewModel.CreatedAtFormatted
                            </div>
                        </div>
                        <div class="p-2">
                            @postViewModel.Content
                        </div>
                        <div class="flex items-center justify-between mx-4 mt-3 mb-2 p-2">
                            <a href="# " class="flex items-center justify-center text-red-500">
                                <i class="fa-solid fa-comment fa-lg"></i>
                            </a>
                            <a href="#" class="flex items-center justify-center text-red-500 font-semibold">
                                @postViewModel.CommentsCount Comments
                            </a>
                        </div>
                    </article>
                }
            }
            <div class="flex flex-row mx-auto">
                @if (postPageViewModel.PreviousId.HasValue)
                {
                    <a asp-controller="Posts" asp-action="Index" asp-route-currentPageId="@postPageViewModel.PreviousId" asp-route-isNextPage="false" class="bg-red-600 text-white rounded-l-md border-r border-gray-100 py-2 hover:bg-red-700 hover:text-white px-3">
                        <div class="flex flex-row align-middle items-center gap-x-2">
                            <i class="fa-solid fa-arrow-left"></i>
                            <p class="ml-2">Newer</p>
                        </div>
                    </a>
                }
                @if (postPageViewModel.NextId.HasValue)
                {
                    <a asp-controller="Posts" asp-action="Index" asp-route-currentPageId="@postPageViewModel.NextId" asp-route-isNextPage="true" class="bg-red-600 text-white rounded-r-md py-2 border-l border-gray-200 hover:bg-red-700 hover:text-white px-3">
                        <div class="flex flex-row align-middle items-center gap-x-2">
                            <p class="ml-2">Older</p>
                            <i class="fa-solid fa-arrow-right"></i>
                        </div>
                    </a>
                }
            </div>
        </section>
    </div>

</section>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const postTypeSelect = document.getElementById('postType');
        const imageComponent = document.getElementById('imageComponent');
        const videoComponent = document.getElementById('videoComponent');
        const imagePreview = document.getElementById('imagePreview');
        const fileInput = document.getElementById('fileAttachment');

        // Función para mostrar el componente adecuado
        function showComponent(selectedType) {
            imageComponent.classList.add('hidden');
            videoComponent.classList.add('hidden');

            if (selectedType === "Image") {
                imageComponent.classList.remove('hidden');
            } else if (selectedType === "Video") {
                videoComponent.classList.remove('hidden');
            }
        }

        // Manejar el cambio de tipo de publicación
        postTypeSelect.addEventListener('change', function () {
            const selectedType = postTypeSelect.value;
            showComponent(selectedType);
        });

        // Mostrar la vista previa de la imagen seleccionada
        fileInput.addEventListener('change', function () {
            const file = fileInput.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.classList.remove('hidden');
                }
                reader.readAsDataURL(file);
            } else {
                imagePreview.classList.add('hidden');
            }
        });

        // Establecer el modo seleccionado al cargar la página
        const selectedTypeOnLoad = postTypeSelect.value;
        showComponent(selectedTypeOnLoad);
    });
</script>
